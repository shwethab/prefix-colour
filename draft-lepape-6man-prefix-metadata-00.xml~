<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- old xml2rfc doesn't find this RFC using rfc include,
new one doesn't support needLines -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3633 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3633.xml">
<!ENTITY RFC3549 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3549.xml">
<!ENTITY RFC3775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3775.xml">
<!ENTITY RFC4191 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4007 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4007.xml">
<!ENTITY RFC4862 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC6724 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY I-D.korhonen-6man-prefix-properties SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.korhonen-6man-prefix-properties.xml">
<!ENTITY I-D.bhandari-dhc-class-based-prefix SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bhandari-dhc-class-based-prefix.xml">
<!ENTITY I-D.troan-homenet-sadr SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.troan-homenet-sadr.xml">
<!ENTITY I-D.jiang-v6ops-semantic-prefix SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.jiang-v6ops-semantic-prefix.xml">
<!ENTITY I-D.ietf-dhc-dhcpv4-over-ipv6 SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dhc-dhcpv4-over-ipv6.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" docName="draft-lepape-6man-prefix-metadata-00"
     ipr="trust200902">
  <front>
    <title>IPv6 Prefix Meta-data and Usage</title>

    <author fullname="Maico Le Pape" initials="M.L.P." surname="Le Pape">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street></street>

          <city>Paris</city>

          <region></region>

          <code></code>

          <country>FR</country>
        </postal>

        <email>maico@maicolepape.org</email>
      </address>
    </author>

    <author fullname="Shwetha Bhandari" initials="S." surname="Bhandari">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore</city>

          <region>KARNATAKA</region>

          <code>560 087</code>

          <country>India</country>
        </postal>

        <phone></phone>

        <email>shwethab@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Ian Farrer " initials="I" surname="Farrer">
      <organization>Deutsche Telekom AG</organization>

      <address>
        <postal>
          <street>GTN-FM4, Landgrabenweg 151</street>

          <city>Bonn 53227</city>

          <region></region>

          <code></code>

          <country>Bonn 53227</country>
        </postal>

        <phone></phone>

        <email>ian.farrer@telekom.de</email>
      </address>
    </author>

    <date day="11" month="July" year="2013" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>homenet multihoming prefix colouring</keyword>

    <abstract>
      <t>This document presents a method for applications to influence the
      IPv6 source selection algorithm used by the IP stack in a host. To do
      so, IPv6 prefixes are associated with a meta-data when configured by the
      network. The meta-data associated with the prefix allows the network to
      describe the purpose and propery of the prefix and the applications to
      make an intelligent decision for selecting the prefix.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>IPv6 provides not only a larger address space than IPv4, but the
      ability for host interfaces to have more than one IPv6 address of same
      or different scope. When multiple prefixes are assigned to one or more
      network interfaces each of the multiple prefixes can have a specific
      property and purpose associated with it. Example: In a mobile network a
      mobile device can be assigned a prefix from its home network and another
      from the visiting network that it is attached to. Another example is a
      prefix may provide free internet access while another prefix may be
      charged along with providing service level guarantees for network
      service access. A prefix can have well defined properties that is
      universal and have a colour associated with it that communicates its
      local significance. This additional information allows the host and
      applications to make more intelligent decisions about which source IPv6
      address to select.</t>

      <t>This document introduces the meta-data to describe the prefix,
      motivation and considerations for delivering and using this meta-data.
      The underlying assumption is that a endpoint or an application has
      multiple prefixes to choose from. Typically this means either the
      endpoint has multiple interfaces or an interface has been configured
      with multiple prefixes. This specification does not make a distinction
      between these alternatives.</t>

      <?rfc needLines="20" ?>

      <section title="Motivation">
        <t>In this section motivation for meta-data attached to IPv6 prefix is
        described in the context of mobile networks and home networks. The
        meta-data attached to a prefix helps to distinguish a IPv6 prefix and
        selection of the prefix by different applications using it.</t>

        <section title="Home networks">
          <t>In a fixed network environment, the homenet CPE may also function
          as both a DHCPv6 client (requesting the IA_PD(s)) and a DHCPv6
          server allocating prefixes from delegated prefix(es) to downstream
          home network hosts. Some service providers may wish to delegate
          multiple prefixes to the CPE for use by different services classes
          and traffic types.</t>

          <t>Motivations for this include: <list style="symbols">
              <t>Using source prefix to identify the service class / traffic
              type that is being transported. The source prefix may then
              reliably be used as a parameter for differentiated services or
              other purposes. E.g. <xref
              target="I-D.jiang-v6ops-semantic-prefix"></xref></t>

              <t>Using the specific source prefix as a host identifier for
              other services. E.g. as an input parameter to a DHCPv4 over IPv6
              server <xref target="I-D.ietf-dhc-dhcpv4-over-ipv6"></xref></t>
            </list></t>

          <t>To meet these requirements, when the CPE (functioning as a DHCPv6
          server) receives an IA_NA or IA_TA request from a homenet host, a
          mechanism is required so that the correct prefix for requested
          service class can be selected for allocation. Likewise for clients
          located in the homenet, a mechanism is necessary so that the
          intended service class for a requested prefix can be signalled and
          obtained either via DHCPv6 or SLAAC ( <xref
          target="RFC4862"></xref>).</t>
        </section>

        <section title="Mobile networks">
          <t>A mobile node in mobile network architecture can be associated
          with multiple IPv6 prefixes belonging to different domains for e.g.
          home address prefix, care of address prefix as specified in <xref
          target="RFC3775"></xref>. The delegated prefixes may be
          topologically local and some may be remote prefixes anchored on a
          global anchor, but available to the local anchor by means of tunnel
          setup in the network between the local and global anchor. Some may
          be local with low latency characteristics suitable for voice call
          break-out, some may have global mobility support. So, the prefixes
          have different properties and it is required for the application
          using the prefix to learn about this property in order to use it
          intelligently. Example to determine if the prefix is a home address
          or care of address or network characteristics that can be
          offered.</t>
        </section>
      </section>
    </section>

    <section title="Overview">
      <t><xref target="overall_arch"></xref> illustrates a typical network
      with different components that can add, understand and use the meta-data
      attached to a prefix.</t>

      <t><list style="symbols">
          <t>Mobile or ISP Network - Provisioned with prefixes that offer
          specific network characteristic. e.g. prefixes that do not have
          internet reach but can offer quality of service required for better
          video application experience. Includes address delegation server
          that associate prefixes with this information, selects and offers
          this information during prefix delegation</t>

          <t>Home/Mobile gateway - Learns or determines characteristic of the
          prefix and propogates it along with prefix delegation. e.g.
          determines if the prefix is locally anchored or learns the prefix
          meta-data from the ISP prefix delegation server and includes this
          information in prefix delegation to endpoints</t>

          <t>Endpoint network stack - Learns the additional information
          associated with the prefix and offers interface to applications for
          listing and selecting the available prefixes</t>

          <t>Prefix selection policy - Either embedded in the
          application/endpoint or learnt from a server that helps choose the
          prefix with specific charateristic for the application based on
          predetermined service agreement between the
          application/endpoint/application service provider and network
          service provider</t>

          <t>Applications - That can utilize the prefix with specific
          characteristic for enhanced application user experience e.g. on
          demand video application, by choosing the prefix with appropriate
          prefix selection policy while connecting and delivering the
          application over the network</t>
        </list></t>

      <t>The prefix meta data consists of following attributes:</t>

      <t><list style="symbols">
          <t>Prefix property - Well defined universally understood information
          about the prefix e.g. whether a prefix can provide internet
          reachablility, if the prefix offers application specific internet
          service level, if the prefix usage is free/charged, if the prefix
          offers security guarantees etc. This is maintained as a global
          regitry as defined in <xref
          target="IANA_PREFIX_PROPERTIES"></xref>.</t>

          <t>Prefix colour - conveys information of the prefix that is of
          relevance to the network where the prefix is provisioned and
          application using it e.g prefix that is provisioned to offer better
          video application experience. The prefix colour is defined as a 16
          bit numerical value to express this information.</t>
        </list>This meta-data can be further extended to have more attributes
      e.g. administrative domain of the prefix.</t>

      <figure align="center" anchor="overall_arch">
        <artwork align="center"><![CDATA[
   +----------------------+         +------------------------+
   |                      |         |                        |
   |     Application      |         |                        |
   |       prefix         |         |    ISP 1, ..., n       |
   |       policy         |         |                        |
   |                      |         |                        |
   +----------------------+         +------------------------+
               :                             |       |
               :                             |       |
               :                             |---n---|
        +--------------+                     |       |
        |  Endpoint    |                     |       |
        | application  |                     |       |
        +- - - - - - - +               +------------------+
        |  Endpoint    |               |                  |
        |  networking  |---------------|  Home Gateway/   |
        |   stack      |               | Mobile Gateway   |
        +--------------+               +------------------+

	  ]]></artwork>
      </figure>
    </section>

    <section title="Considerations">
      <section title="Prefix meta-data propogation">
        <t>The prefix meta-data can be delivered using DHCPv6 prefix
        delegation and address allocation as ellaborated in <xref
        target="I-D.bhandari-dhc-class-based-prefix"></xref> or via IPv6
        Neighbour discovery (ND) as defined in <xref
        target="I-D.korhonen-6man-prefix-properties"></xref>.</t>
      </section>

      <section title="Configuring applications">
        <t>Applications supporting multiple prefixes obtain the prefixes from
        the host kernel along with their meta-data.</t>

        <t>The policy can then be contained either locally (e.g. if the
        application is intended only for use within a specific network, linked
        to a particular ISP comes prepackages with prefix colour to use), or
        be contained on a distant server. The mechanism used to exchange the
        meta-data information and selection between application/host with a
        distant server is beyond the scope of this document.</t>
      </section>

      <section anchor="application_communication_generic"
               title="Application to network stack communication">
        <t>Once an application has determined the appropriate property and
        colour for its use it has to communicate with the network stack to
        select the prefix. The host internal data structures need to be
        extended with the 'prefix property' and the 'prefix colour'
        information associated to the learnt prefix and configured addresses.
        How this is accomplished is host implementation specific. It is also a
        host implementation issue how an application can learn or query both
        properties and colour of an address or a prefix. One possibility is to
        provide such information through the socket API extensions. Other
        possibilities include the use of e.g., ioctl() or NetLink <xref
        target="RFC3549"></xref> extensions or by using the <xref
        target="RFC4007">IPv6 address scope</xref>.</t>
      </section>

      <section title="Default Address Selection">
        <t>The 'prefix property' leant by the network stack is only used as a
        hint. It does not affect the existing <xref target="RFC6724"></xref>
        automatically. A specific rule to host's policy table has to be
        inserted by an application or some daemon process. Alternatively, an
        application can express its address property preferences through the
        socket API extensions which means the socket library or middleware has
        to modify <xref target="RFC6724"></xref> policy table or algorithm.
        The 'prefix properties' flags MAY define the prefix preference for an
        IP stack that understands the extensions defined in this
        specification. The IP stack SHOULD use the properties preferences to
        supersede <xref target="RFC6724"></xref> Source Address Selection Rule
        8 when selecting a default source address among multiple choices and
        an application has not explicitly indicate what kind of source address
        it prefers. As the 'prefix colour' is of significance to the
        application colour selection needs to be driven by the application and
        hence no default colour based address selection is required.</t>
      </section>

      <section title="Scope of Prefix Colour ">
        <t>Since a home can be connected to multiple ISPs, it is possible that
        it receives multiple prefixes with the same colour from different
        ISPs. Since the application colouring policy is not received with the
        colour, multiple ISPs could use different colouring policy for a
        colour. Example One ISP could use colour 50 for video, while colour 50
        would be for audio for another ISP.</t>

        <t>This section presents some alternatives to handle this problem.</t>

        <section anchor="local_scoping" title="Local scoping">
          <t>A locally scoped colour is a value which is selected by the
          network and application providers with no central registry. In a
          multihomed network, this may result in two providers selecting the
          same colour for different behaviors. A colour translation could be
          performed to ensure unique colour at the device that connects to
          multiple providers.</t>
        </section>

        <section anchor="local_fuzzy"
                 title="Local scoping with fuzzy matching">
          <t>To avoid having to maintain multiple colours for each prefix for
          translating the colour, a specific algorithm can be used to
          determine the new colour from the old one on conflict.</t>

          <t>For example, when a collision is detected, the new colour value
          may be incremented. Further, colours could be defined to be equally
          spaced (e.g., 10s or 100s).</t>

          <t>Many other encodings are possible as well, as long as obtaining
          the original colour communicated by the ISP may be recovered in the
          event the application policy server requires this.</t>
        </section>

        <section anchor="global_scoping" title="Global scoping">
          <t>A globally scoped colour avoids the need for responding to
          collisions. This can be acheived by disambiguating the colour by
          attaching the domain that provisions the colour to the prefix
          meta-data or by assigning colours from a global registry that comes
          with the overhead of maintaining such a registry.</t>
        </section>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>Should the global scoping for prefix colour be chosen, a new registry
      should be created by IANA to store colours.</t>

      <section anchor="IANA_PREFIX_PROPERTIES" title="Prefix property values">
        <t>IANA is requested to reserve and maintain registry of prefix
        property values and manage allocation of values as per policy defined
        in <xref target="RFC5226"></xref> with IETF assigned values requiring
        IETF consensus, RFC Required policy, any other values other than the
        ones listed below are not valid.<list style="numbers">
            <t>0x0001 The prefix cannot be used to reach the Internet</t>

            <t>0x0002 The prefix provides network based mobility</t>

            <t>0x0004 The prefix requires authentication</t>

            <t>0x0008 The prefix is assigned on an interface that provides
            security guarantees</t>

            <t>0x0010 Usage is charged</t>

            <t>0x0020 The prefix provides multi-homed redundancy</t>

            <t>0x0040 The prefix provides Internet service SLA, based on
            associated prefix colour</t>

            <t>0x0080 Unassigned</t>

            <t>0x0100 Unassigned</t>

            <t>0x0200 Unassigned</t>

            <t>0x0400 Unassigned</t>

            <t>0x0800 Unassigned</t>

            <t>0x1000 Unassigned</t>

            <t>0x2000 Unassigned</t>

            <t>0x4000 Unassigned</t>

            <t>0x8000 Unassigned</t>
          </list></t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>TBD</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to acknowledge review and guidance received
      from </t>
    </section>

    <section title="Change History (to be removed prior to publication as an RFC) ">
      <t></t>
    </section>


  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;
    </references>

    <references title="Informative References">
      &RFC3633;

      &RFC6724;

      &RFC4191;

      &RFC4862;

      &I-D.troan-homenet-sadr;

      &I-D.bhandari-dhc-class-based-prefix;

      &I-D.korhonen-6man-prefix-properties;

      &RFC4007;

      &RFC3775;

      &RFC5226;

      &RFC3549;

      &I-D.ietf-dhc-dhcpv4-over-ipv6;

      &I-D.jiang-v6ops-semantic-prefix;
    </references>
    <section title="Appendix">
      <t></t>

      <section title="Homenet prototype implementation notes">
        <t>This section provides implementation details of a prototype
        developed for a video application on Android for a Galaxy Nexus
        device.</t>

        <section title="Video provider service">
          <t>A possible use of this prefix colouring is a video service, which
          requires the network to guarantee a minimal throughput to stream
          video. A prefix could be coloured by the ISP to maintain a certain
          service level. Using prefix colouring avoids having to set up a
          separate network for this usage.</t>

          <t>An agreement could then be established between the video service
          and the ISP, telling the video provider to use this specific colour
          (for example 50) when streaming video.</t>
        </section>

        <section title="Prefix Colour delegation">
          <t>The CPE routers request prefixes using <xref target="RFC3633">
          prefix delegation</xref> with the <xref
          target="I-D.bhandari-dhc-class-based-prefix">OPTION_PREFIX_CLASS
          option</xref>. This informs the upstream provider that the CPE
          supports coloured prefixes. If an ISP does not support this option,
          it will be ignored, and the CPE will only get colourless prefixes.
          Otherwise, the ISP returns multiple prefixes each with their
          associated colour. A colour of 0 is identical to an uncoloured
          prefix, for application compatibility, as explained in <xref
          target="application_communication"></xref>. If the CPE does not
          support coloured prefixes, the ISP could decide to delegate a
          normally coloured prefix as an colourless one, though this means
          hosts will use this prefix according to the default source address
          selection algorithm, and will not associate any meaning to it.</t>

          <t>Once the CPE receives those prefixes, it distributes them, along
          with their colour, using OSPF and the homenet protocols. <xref
          target="I-D.troan-homenet-sadr"></xref> defines "Source Address
          Dependent Routing" (SADR) which ensures that packets are routed
          based on their destination as well as source address. SADR is
          necessary to ensure that a multihomed network using provider
          aggregatable addresses will send the packet out the right path to
          avoid violating the provider's ingress filtering.To ensure that
          those prefixes keep their meaning, <xref
          target="I-D.troan-homenet-sadr">Source Address Dependent
          Routing</xref> is implemented and used.</t>

          <t>Coloured addresses are advertised to hosts through DHCPv6, to
          associate the colour to the address. Colourless addresses may be
          distributed through DHCPv6 or through Router Advertisements. Hosts
          supporting coloured prefixes include the OPTION_PREFIX_CLASS, and
          receive coloured addresses. For legacy hosts, who do not include
          this option, there are two possibilities : <list style="symbols">
              <t>Those hosts can receive all available prefixes, including
              coloured ones, as uncoloured. This allows a legacy host in a
              fully coloured homenet to still have access to IPv6. However,
              those hosts may use prefixes for the wrong purposes.</t>

              <t>Those hosts can receive only colourless prefixes. this
              ensures that a prefix will not be used for the wrong purpose.
              However, hosts in a fully coloured environment will not get
              access to IPv6. This can however be what the ISP originally
              intended, for example if the ISP does not provide access to the
              IPv6 internet, but uses IPv6 for wall gardened services, which
              their specific devices know how to use.</t>
            </list></t>
        </section>

        <section title="Configuring applications">
          <t>Applications supporting multiple prefixes obtain the prefixes
          from the host kernel, along with their colour.</t>

          <t>The policy can be contained either in a local database (e.g. if
          the application is intended only for use within a specific network,
          linked to a particular ISP), or be contained on a distant
          server.</t>

          <t>For applications that do not contain a local database, an HTTP
          POST request is sent to a predefined server using a colourless
          prefix. This server, through means that are out of the scope of this
          document, selects the most appropriate colour for the URIs used by
          the application. It then returns an XML document containing the
          mapping between the URIs and the colours. URIs in this document MAY
          use wildcards.</t>

          <t>When the application is started, it sends the available prefixes
          and their colour to the video provider server which answers with a
          wildcard URI videos.example.com associated to colour 50. In this
          example application it receives:</t>

          <figure>
            <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<mappings>
    <mapping>
        <URI>*://audio.example.com/*</URI>
        <colour>40</colour>
    </mapping>
    <mapping>
        <URI>rtsp://video.example.com/*</URI>
        <colour>50</colour>
    </mapping>
</mappings>
]]></artwork>
          </figure>

          <t>The server is expected to know the application, and thus to list
          all URIs that could be of use to the application. The application
          will not ask the server if it has to contact an address not in the
          list and will use the colourless prefix. This avoids an additional
          delay when trying to contact an unlisted URI.</t>

          <t>Example: While the application is browsing the video list, it is
          using www.example.com, and thus the colourless prefix. However as
          soon as a video is choosen, it starts streaming from
          videos.example.com, and asks to connect to host videos.example.com
          with colour 50, indicating that it wishes to use the coloured
          prefix.</t>
        </section>

        <section title="Android DHCPv6">
          <t>Considering that this prototype is being implemented on Android,
          the first step is to get a running DHCPv6 client on Android, with
          support for the OPTION_PREFIX_CLASS option.</t>

          <t>The odhcp6c client, which already supports OPTION_PREFIX_CLASS,
          has been ported to Android, and is set to run in parallel to the
          dhcpcd client used for DHCP. The success of any of the two clients
          results in the success of the WiFi connection, so as to support IPv6
          only networks.</t>

          <t>This client configures the IPv6 addresses using calls to ip
          address, which is modified to support the addition of a class option
          to set the prefix colour.</t>
        </section>

        <section anchor="application_communication"
                 title="Application to network stack communication">
          <t>Once an application has received the appropriate colour for its
          use, in this prototype it specifies the prefix it wishes to use by
          using the <xref target="RFC4007">IPv6 address scope</xref>. When
          resolving this address, the standard library then adds this
          information in the address information it returns, using the scope
          field, allowing the kernel to appropriately select the source IP
          when connecting. For this reason, a colour of 0 is identical to an
          colourless prefix.</t>

          <t>In the example, when downloading from video.example.com, the
          application would request a connection to video.example.com%50.</t>

          <t>This allows the user to override the application's default simply
          by specifying a colour in the scope of the URI it is trying to
          access, and requires little to no change in applications to support
          it. Applications that allow scope ids do not need to be modified in
          order to allow the user to use multiple prefixes (though it is then
          up to the user to select its colour). A web browser that allows
          scope id would allow the user to add a colour to the URI, without
          requiring any modifications.</t>
        </section>

        <section title="Android kernel">
          <t>To reduce the amount of modifications needed by the applications
          to support this prefix colouring, we need to avoid having to bind to
          the address in the coloured prefix before initiating the connection.
          The kernel is expected to choose the correct source address when a
          coloured destination is used.</t>

          <t>This implies storing the colour in the kernel, along with the
          address, which is done using a new attribute IFA_COLOUR to the
          netlink message RTM_NEWADDR, used by ip address. Setting a coloured
          prefix using ioctls is not supported.</t>

          <t>Since colours are put in the scope id part of the destination
          address, we continue to use the scope element of the sockaddr_in6
          structure to store the colour when sending connect messages to the
          kernel. The scope is only used when considering local addresses, so
          we interpret the presence of a scope on a non link-local address to
          be a colour. Colours can not be assigned to link-local addresses,
          but since they are on the same link, source address shouldn't impact
          how the network treats packets. When selecting the source address,
          we then discard all addresses which do not have the correct
          colour.</t>
        </section>

        <section title="Limitations of the current prototype">
          <t>It does not implement any duplicate colour detection. Colours are
          considered to be unique within the home, and to correspond to the
          original colour provided by the ISP. This is compatible with <xref
          format="title" target="global_scoping"></xref>. No changes would be
          required to the host in order to support <xref format="title"
          target="local_fuzzy"></xref>, but OSPF would need to detect
          collisions, and the server would need to recalculate the original
          colour before making a decision. In this implementation, hosts that
          do not support colours do not receive coloured prefixes.</t>
        </section>
    </section>
      </section>  </back>
</rfc>
