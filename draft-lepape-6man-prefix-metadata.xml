<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- old xml2rfc doesn't find this RFC using rfc include,
new one doesn't support needLines -->
<!ENTITY RFC4007 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4007.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" docName="draft-lepape-6man-prefix-metadata-00"
     ipr="trust200902">
  <front>
    <title>IPv6 Prefix Meta-data and Usage</title>

    <author fullname="Maico Le Pape" initials="M.L.P." surname="Le Pape">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street></street>

          <city>Paris</city>

          <region></region>

          <code></code>

          <country>FR</country>
        </postal>

        <email>maico@maicolepape.org</email>
      </address>
    </author>

    <author fullname="Shwetha Bhandari" initials="S." surname="Bhandari">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore</city>

          <region>KARNATAKA</region>

          <code>560 087</code>

          <country>India</country>
        </postal>

        <phone></phone>

        <email>shwethab@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Ian Farrer " initials="I" surname="Farrer">
      <organization>Deutsche Telekom AG</organization>

      <address>
        <postal>
          <street>GTN-FM4, Landgrabenweg 151</street>

          <city>Bonn 53227</city>

          <region></region>

          <code></code>

          <country>Bonn 53227</country>
        </postal>

        <phone></phone>

        <email>ian.farrer@telekom.de</email>
      </address>
    </author>

    <date day="11" month="July" year="2013" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>homenet multihoming prefix colouring</keyword>

    <abstract>
      <t>This document presents a method for applications to influence the
      IPv6 source selection algorithm used by the IP stack in a host. To do
      so, IPv6 prefixes are associated with a meta-data when configured by the
      network. The meta-data associated with the prefix allows the network to
      describe the purpose and propery of the prefix and the applications to
      make an intelligent decision for selecting the prefix.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>IPv6 provides not only a larger address space than IPv4, but the
      ability for host interfaces to have more than one IPv6 address of same
      or different scope. When multiple prefixes are assigned to one or more
      network interfaces each of the multiple prefixes can have a specific
      property and purpose associated with it. Example: In a mobile network a
      mobile device can be assigned a prefix from its home network and another
      from the visiting network that it is attached to. Another example is a
      prefix may provide free internet access while another prefix may be
      charged along with providing service level guarantees for network
      service access. A prefix can have well defined properties that is
      universal and have a colour associated with it that communicates its
      local significance. This additional information allows the host and
      applications to make more intelligent decisions about which source IPv6
      address to select.</t>

      <t>This document introduces the meta-data to describe the prefix,
      motivation and considerations for delivering and using this
      meta-data.</t>

      <?rfc needLines="20" ?>

      <section title="Overall architecture">
        <figure align="center" anchor="overall_arch">
          <artwork align="center"><![CDATA[
   +----------------------+         +------------------------+
   |                      |         |                        |
   |     Application      |         |                        |
   |      colouring       |         |    ISP 1, ..., n       |
   |        policy        |         |                        |
   |                      |         |                        |
   +----------------------+         +------------------------+
               :                             |       |
               :                             |       |
               :                             |---n---|
        +--------------+                     |       |
        |     Host     |                     |       |
        | application  |                     |       |
        +- - - - - - - +               +------------------+
        |     Host     |               |                  |
        |  networking  |---------------|     Homenet      |
        |    stack     |               |                  |
        +--------------+               +------------------+

	  ]]></artwork>
        </figure>
      </section>
    </section>

    <section title="Prefix colouring and propagation">
      <section title="Prefix colouring">
        <t>The CPE routers request prefixes using <xref target="RFC3633">
        prefix delegation</xref> with the <xref
        target="I-D.bhandari-dhc-class-based-prefix">OPTION_PREFIX_CLASS
        option</xref>. This informs the upstream provider that the CPE
        supports coloured prefixes. If an ISP does not support this option, it
        will be ignored, and the CPE will only get uncoloured prefixes.
        Otherwise, the ISP returns multiple prefixes each with their
        associated colour. A colour of 0 is identical to an uncoloured prefix,
        for application compatibility, as explained in <xref
        target="application_communication"></xref>. If the CPE does not
        support coloured prefixes, the ISP could decide to delegate a normally
        coloured prefix as an uncoloured one, though this means hosts will use
        this prefix according to the default source address selection
        algorithm, and will not associate any meaning to it.</t>

        <t>Once the CPE receives those prefixes, it distributes them, along
        with their colour, using OSPF and the homenet protocols. To ensure
        that those prefixes keep their meaning, the network must implement
        <xref target="I-D.troan-homenet-sadr">Source Address Dependent
        Routing</xref>.</t>

        <t>Addresses must then be assigned to the hosts. Coloured addresses
        are advertised through DHCPv6, to associate the colour to the address.
        Uncoloured addresses may be distributed through DHCPv6 or through
        Router Advertisements. Hosts supporting coloured prefixes include the
        OPTION_PREFIX_CLASS, and receive coloured addresses. For legacy hosts,
        who do not include this option, there are two possibilities : <list
            style="symbols">
            <t>Those hosts can receive all available prefixes, including
            coloured ones, as uncoloured. This allows a legacy host in a fully
            coloured homenet to still have access to IPv6. However, those
            hosts may use prefixes for the wrong purposes.</t>

            <t>Those hosts can receive only uncoloured prefixes. this ensures
            that a prefix will not be used for the wrong purpose. However,
            hosts in a fully coloured environment will not get access to IPv6.
            This can however be what the ISP originally intended, for example
            if the ISP does not provide access to the IPv6 internet, but uses
            IPv6 for wall gardened services, which their specific devices know
            how to use.</t>
          </list></t>
      </section>

      <section title="Configuring applications">
        <t>Applications supporting multiple prefixes obtain the prefixes from
        the host kernel, along with their colour.</t>

        <t>The policy can then be contained either in a local database (e.g.
        if the application is intended only for use within a specific network,
        linked to a particular ISP), or be contained on a distant server.</t>

        <t>For applications that do not contain a local database, an HTTP POST
        request is sent to a predefined server using a colourless prefix. This
        server, through means that are out of the scope of this document,
        selects the most appropriate colour for the URIs used by the
        application. It then returns an XML document containing the mapping
        between the URIs and the colours. URIs in this document MAY use
        wildcards.</t>

        <t>In the exemple above, this document could be:</t>

        <figure>
          <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<mappings>
    <mapping>
        <URI>*://audio.example.com/*</URI>
        <colour>40</colour>
    </mapping>
    <mapping>
        <URI>rtsp://video.example.com/*</URI>
        <colour>50</colour>
    </mapping>
</mappings>
]]></artwork>
        </figure>

        <t>The server is expected to know the application, and thus to list
        all URIs that could be of use to the application. The application will
        not ask the server if it has to contact an address not in the list and
        will use the uncoloured prefix. This avoids an additional delay when
        trying to contact an unlisted URI.</t>
      </section>

      <section anchor="application_communication"
               title="Application to network stack communication">
        <t>Once an application has received the appropriate colour for its
        use, it specifies the prefix it wishes to use by using the <xref
        target="RFC4007">IPv6 address scope</xref>. When resolving this
        address, the standard library then adds this information in the
        address information it returns, using the scope field, allowing the
        kernel to appropriately select the source IP when connecting. For this
        reason, a colour of 0 is identical to an uncoloured prefix.</t>

        <t>In the example, when downloading from video.example.com, the
        application would request a connection to video.example.com%50.</t>

        <t>This allows the user to override the application's default simply
        by specifying a colour in the scope of the URI it is trying to access,
        and requires little to no change in applications to support it.
        Applications that allow scope ids do not need to be modified in order
        to allow the user to use multiple prefixes (though it is then up to
        the user to select its colour). A web browser that allows scope id
        would allow the user to add a colour to the URI, without requiring any
        modifications.</t>
      </section>
    </section>

    <section title="Scoping">
      <t>Since a home can be connected to multiple ISPs, it is possible that
      it receives multiple prefixes with the same colour from different ISPs.
      Since the application colouring policy is not received with the colour,
      multiple ISPs could use different colouring policy for a colour. One ISP
      could use colour 50 for video, while colour 50 would be for audio for
      another ISP.</t>

      <t>This document presents as follows three alternatives to handle this
      problem.</t>

      <section anchor="local_scoping" title="Local scoping">
        <t>A locally scoped color is a value which is selected by the network
        and application providers with no central registry. In a multihomed
        network, this may result in two providers selecting the same color for
        different behaviors. homenet could detect this situation and react by
        keeping a set of colors within the homenet unique, with translation at
        the edge of the homenet. If this is done, since the server needs to be
        able to choose the most appropriate prefix for a URI, the original
        colour number must somehow be sent. This requires either a
        modification to OPTION_PREFIX_CLASS, adding a second field for the
        original colour, or a new option to be created to pass that original
        colour.</t>

        <t>Both information must then be retained within the network and the
        host, and all of that information must be passed along to the server
        choosing the most appropriate prefix. The server can then simply
        answer with the new prefix colour, which is the one that identifies
        this prefix within the home.</t>
      </section>

      <section anchor="local_fuzzy" title="Local scoping with fuzzy matching">
        <t>To avoid having to maintain multiple colours for each prefix (the
        old and the new prefix), a specific algorithm can be used to determine
        the new colour from the old one.</t>

        <t>For example, when a collision is detected, the new colour value may
        be incremented. Further, colours could be defined to be equally spaced
        (e.g., 10s or 100s). If the interval is set to 10, we can have up to
        6552 ISPs, and up to 10 ISPs per home.</t>

        <t>The server choosing the colour can then deduce the original colour
        without needing additional information from the home. For the given
        example, colours 50-59 would correspond to an original colour of
        50.</t>

        <t>This implies a compromise between the number of colours available,
        and the number of ISPs a home could be connected to. If a home wishes
        to be connected to more than 10 ISPs, the set of available colours
        could for example be limited to the multiples of 100. However, that
        would mean that only 654 colours would be available.</t>

        <t>Many other encodings are possible as well, as long as obtaining the
        original colour communicated by the ISP may be recovered in the event
        the application policy server requires this.</t>
      </section>

      <section anchor="global_scoping" title="Global scoping">
        <t>A globally scoped colour avoids the need for responding to
        collisions, but requires some sort of global registry, whether new or
        existing.</t>

        <t>In that case, choosing a colour would ensure that the network is
        intended for that specific use, independently of the ISP that would be
        chosen by the host.</t>

        <t>As such, no discussion would be needed between the service provider
        and the ISP, and this information could even be contained within the
        app.</t>

        <t>This has the additional overhead of a global registry.</t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>Should the global scoping be chosen, a new registry should be created
      by IANA to store colours. Otherwise, this memo includes no request to
      IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>TBD</t>
    </section>

    <section title="Appendix">
      <t></t>

      <section title="Homenet use cases and prototype implementation">
        <t>The prototype is developed on Android for a Galaxy Nexus
        device.</t>

        <section title="Video provider service">
          <t>A possible use of this prefix colouring is a video service, which
          requires the network to guarantee a minimal throughput to stream
          video. A prefix could be coloured by the ISP to maintain a certain
          service level. Using prefix colouring avoids having to set up a
          separate network for this usage.</t>

          <t>An agreement could then be established between the video service
          and the ISP, telling the video provider to use this specific colour
          (for example 50) when streaming video.</t>

          <t>When the application is started, it sends the available prefixes
          and their colour to the video provider server which answers with a
          wildcard URI videos.example.com associated to colour 50.</t>

          <t>While the application is browsing the video list, it is using
          www.example.com, and thus the uncoloured prefix. However as soon as
          a video is choosen, it starts streaming from videos.example.com, and
          asks to connect to host videos.example.com%50, indicating that it
          wishes to use the coloured prefix.</t>
        </section>

        <section title="Android DHCPv6">
          <t>Considering that this prototype is being implemented on Android,
          the first step is to get a running DHCPv6 client on Android, with
          support for the OPTION_PREFIX_CLASS option.</t>

          <t>The odhcp6c client, which already supports OPTION_PREFIX_CLASS,
          has been ported to Android, and is set to run in parallel to the
          dhcpcd client used for DHCP. The success of any of the two clients
          results in the success of the WiFi connection, so as to support IPv6
          only networks.</t>

          <t>This client configures the IPv6 addresses using calls to ip
          address, which is modified to support the addition of a class option
          to set the prefix colour.</t>
        </section>

        <section title="Android kernel">
          <t>To reduce the amount of modifications needed by the applications
          to support this prefix colouring, we need to avoid having to bind to
          the address in the coloured prefix before initiating the connection.
          The kernel is expected to choose the correct source address when a
          coloured destination is used.</t>

          <t>This implies storing the colour in the kernel, along with the
          address, which is done using a new attribute IFA_COLOUR to the
          netlink message RTM_NEWADDR, used by ip address. Setting a coloured
          prefix using ioctls is not supported.</t>

          <t>Since colours are put in the scope id part of the destination
          address, we continue to use the scope element of the sockaddr_in6
          structure to store the colour when sending connect messages to the
          kernel. The scope is only used when considering local addresses, so
          we interpret the presence of a scope on a non link-local address to
          be a colour. Colours can not be assigned to link-local addresses,
          but since they are on the same link, source address shouldn't impact
          how the network treats packets. When selecting the source address,
          we then discard all addresses which do not have the correct
          colour.</t>
        </section>

        <section title="Limitations of the current prototype">
          <t>It does not implement any duplicate colour detection. Colours are
          considered to be unique within the home, and to correspond to the
          original colour provided by the ISP. This is compatible with <xref
          format="title" target="global_scoping"></xref>. No changes would be
          required to the host in order to support <xref format="title"
          target="local_fuzzy"></xref>, but OSPF would need to detect
          collisions, and the server would need to recalculate the original
          colour before making a decision. In this implementation, hosts that
          do not support colours do not receive coloured prefixes.</t>
        </section>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.3633'?>

      <?rfc include='reference.RFC.6724'?>

      <?rfc include='reference.RFC.4191'?>

      <?rfc include='reference.I-D.troan-homenet-sadr'?>

      <?rfc include='reference.I-D.bhandari-dhc-class-based-prefix'?>

      <?rfc include='reference.I-D.korhonen-6man-prefix-properties'?>

      &RFC4007;
    </references>
  </back>
</rfc>
